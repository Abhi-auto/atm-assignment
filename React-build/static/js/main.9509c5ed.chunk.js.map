{"version":3,"sources":["register.js","dashboard.js","index.js"],"names":["Register","props","useState","cardNo","setCardNo","registerCard","setRegister","found","message","type","onChange","e","target","value","onClick","fetch","headers","body","method","then","response","json","data","Dashboard","amount","setAmount","Show","ATM","setMessage","setFound","onSubmit","event","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"mLAEe,SAASA,EAASC,GAC7B,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAqBC,EAArB,KAkBA,MAAoB,UAAhBL,EAAMM,MAEF,qCACI,4BAAIN,EAAMO,UADd,uBAEwB,uBAAOC,KAAK,SAASC,SAAU,SAACC,GAAD,OAAOP,EAAUO,EAAEC,OAAOC,UAC7E,wBAAQC,QArBpB,WAGIC,MAFe,qCAED,CACVC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMd,EACNe,OAAQ,SAEPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAAQF,MAAK,SAACG,GACvChB,EAAYgB,EAAKd,aASjB,sBACA,4BAAIH,OAIL,KC9BA,SAASkB,EAAUtB,GAE9B,MAA4BC,mBAAS,IAArC,mBAAOsB,EAAP,KAAeC,EAAf,KAEA,SAASC,IACL,MAAe,OAAXF,GAA8B,OAAXA,GAA8B,OAAXA,EAC9B,6DAGO,KAAXA,EACO,KAGC,2DAIpB,OACI,qCACI,uCAAUvB,EAAME,OAAhB,QACA,iGACI,uBAAOM,KAAK,SAASC,SAAU,SAACC,GAAD,OAAOc,EAAUd,EAAEC,OAAOC,UACzD,cAACa,EAAD,UCnBD,SAASC,IAEpB,MAA4BzB,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOM,EAAP,KAAgBoB,EAAhB,KACA,EAA0B1B,mBAAS,IAAnC,mBAAOK,EAAP,KAAcsB,EAAd,KAwBA,MAAa,iBAAVrB,GAAsC,SAAVD,EAEvB,cAACgB,EAAD,CAAWpB,OAAQA,IAKvB,8BACI,uBAAM2B,SA9Bd,SAAsBC,GAQlBhB,MAFe,yCAED,CACVC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMd,EACNe,OAAQ,SAEPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAAQF,MAAK,SAACG,GACvCO,EAASP,EAAKf,OACdqB,EAAWN,EAAKd,YAhBxBuB,EAAMC,kBA4BF,sBACa,uBAAOvB,KAAK,SAASC,SAAU,SAACC,GAAD,OAAOP,EAAUO,EAAEC,OAAOC,UAClE,uBAAOJ,KAAK,SAASI,MAAM,UAC3B,cAACb,EAAD,CAAUO,MAAOA,EAAOC,QAASA,SAOjDyB,IAASC,OACL,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.9509c5ed.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Register(props) {\r\n    const [cardNo, setCardNo] = useState(\"\");\r\n    const [registerCard, setRegister] = useState(\"\");\r\n\r\n    function registerFunction() {\r\n        const apiURL = \"http://localhost:8282/ATM/register\"\r\n        //fetch(apiURL).then((response)=>response.json()).then((data)=>console.log('Data :',data));\r\n        fetch(apiURL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: cardNo,\r\n            method: \"post\"\r\n        })\r\n            .then((response) => response.json()).then((data) => {\r\n                setRegister(data.message);\r\n            });\r\n    }\r\n\r\n    if (props.found === \"false\")\r\n        return (\r\n            <>\r\n                <p>{props.message}</p>\r\n                Enter Card Number : <input type=\"number\" onChange={(e) => setCardNo(e.target.value)} />\r\n                <button onClick={registerFunction}>Register</button>\r\n                <p>{registerCard}</p>\r\n            </>\r\n        );\r\n    else\r\n        return null\r\n}","import { useState } from \"react\";\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    function Show() {\r\n        if (amount === '10' || amount === '20' || amount === '50') {\r\n            return (<p>Amount sucessfully Dispensed</p>);\r\n        }\r\n        else {\r\n            if (amount === '') {\r\n                return null;\r\n            }\r\n            else\r\n                return (<p>Amount cannot be dispensed</p>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p> Dear {props.cardNo} ,</p>\r\n            <p> Please enter amount for Dispense Demonitaions ($50, $20, $10) :\r\n                <input type=\"number\" onChange={(e) => setAmount(e.target.value)} />\r\n                <Show />\r\n            </p>\r\n        </>\r\n    );\r\n}","import ReactDOM from 'react-dom';\r\nimport React, { useState } from \"react\";\r\nimport Register from './register';\r\nimport Dashboard from './dashboard';\r\n\r\nexport default function ATM() {\r\n\r\n    const [cardNo, setCardNo] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [found, setFound] = useState(\"\");\r\n\r\n    function stateHandler(event) {\r\n        consumeAPI();\r\n        event.preventDefault();\r\n    }\r\n\r\n    function consumeAPI() {\r\n        const apiURL = \"http://localhost:8282/ATM/transactions\"\r\n        //fetch(apiURL).then((response)=>response.json()).then((data)=>console.log('Data :',data));\r\n        fetch(apiURL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: cardNo,\r\n            method: \"post\"\r\n        })\r\n            .then((response) => response.json()).then((data) => {\r\n                setFound(data.found);\r\n                setMessage(data.message);\r\n            });\r\n    }\r\n\r\n    if(message===\"User exists!\" && found === \"true\"){\r\n        return(\r\n            <Dashboard cardNo={cardNo}/>\r\n        );\r\n    }\r\n    else{\r\n    return (\r\n        <div>\r\n            <form onSubmit={stateHandler}>\r\n                Card No: <input type=\"number\" onChange={(e) => setCardNo(e.target.value)} />\r\n                <input type=\"submit\" value=\"Login\" />\r\n                <Register found={found} message={message}/>\r\n            </form>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <ATM />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}